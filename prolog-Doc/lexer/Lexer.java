/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.PL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 5: state = State.DOC_STAR; break;
                            }
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 6: state = State.DOC_STAR; break;
                            }
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 6: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 6: state = State.PL; break;
                            }
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.PL; break;
                            }
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.PL_SINGLE_COMMENT_START; break;
                            }
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.PL_SLASH; break;
                            }
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.PL_SINGLE_TICKS; break;
                            }
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.PL_DOUBLE_TICKS; break;
                            }
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.PL_SLASH; break;
                            }
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.PL_STAR; break;
                            }
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.PL; break;
                            }
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 2: state = State.PL_COMMENT; break;
                            }
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 2: state = State.DOC; break;
                            }
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 9: state = State.PL_COMMENT; break;
                            }
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 9: state = State.PL_COMMENT_STAR; break;
                            }
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 10: state = State.PL_COMMENT_STAR; break;
                            }
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 10: state = State.PL_COMMENT; break;
                            }
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 10: state = State.PL; break;
                            }
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.PL_SINGLE_TICKS; break;
                            }
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.PL_SINGLE_TICKS; break;
                            }
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.PL; break;
                            }
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 4: state = State.PL_DOUBLE_TICKS; break;
                            }
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 4: state = State.PL_DOUBLE_TICKS; break;
                            }
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 4: state = State.PL; break;
                            }
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 8: state = State.PL; break;
                            }
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 8: state = State.PL; break;
                            }
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 8: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.PL; break;
                            }
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 7: state = State.DOC_SINGLE; break;
                            }
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocAt(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocMail(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocDescr(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocDate(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocAuthor(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocMode(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocAtdoc(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocIdentifier(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringDocString(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringDocStar(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringStarStar(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringStarString(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocEnd(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammNoSlash(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammCommentStart(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProrgrammSlash(line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammSingleTicks(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammDoubleTicks(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammSlashSlash(line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammToStar(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammSlashAny(text, line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammStarAny(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocStart(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentNoStar(text, line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentStar(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentStarStar(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentStarNoSlash(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentStarSlash(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammSingleString(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammSingleStringEscape(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammSingleStringEnd(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammDoubleString(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammDoubleStringEscape(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammDoubleStringEnd(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammComment(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgrammEndNormalSingleComment(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocStart(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocSingleString(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocSingleEnd(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocMail(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocDescr(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocDate(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocAuthor(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocMode(text, line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSingleDocAtdoc(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // PL
            {{0, 33, 1}, {34, 34, 2}, {35, 36, 1}, {37, 37, 3}, {38, 38, 1}, {39, 39, 4}, {40, 46, 1}, {47, 47, 5}, {48, 65535, 1}, },
            {},
            {},
            {},
            {},
            {},
        }
        { // PL_SLASH
            {{0, 33, 1}, {35, 38, 1}, {40, 41, 1}, {42, 42, 2}, {43, 46, 1}, {47, 47, 3}, {48, 65535, 1}, },
            {},
            {},
            {},
        }
        { // PL_STAR
            {{0, 41, 1}, {42, 42, 2}, {43, 65535, 1}, },
            {},
            {{9, 9, 3}, {10, 10, 4}, {13, 13, 5}, {32, 32, 6}, },
            {{9, 32, -4}, },
            {{9, 32, -4}, },
            {{9, 32, -4}, },
            {{9, 32, -4}, },
        }
        { // PL_SINGLE_TICKS
            {{0, 38, 1}, {39, 39, 2}, {40, 91, 1}, {92, 92, 3}, {93, 65535, 1}, },
            {{0, 38, 1}, {40, 91, 1}, {93, 65535, 1}, },
            {},
            {{0, 65535, 4}, },
            {},
        }
        { // PL_DOUBLE_TICKS
            {{0, 33, 1}, {34, 34, 2}, {35, 91, 1}, {92, 92, 3}, {93, 65535, 1}, },
            {{0, 33, 1}, {35, 91, 1}, {93, 65535, 1}, },
            {},
            {{0, 65535, 4}, },
            {},
        }
        { // DOC
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 41, 1}, {42, 42, 6}, {43, 44, 1}, {45, 45, 7}, {46, 46, 8}, {47, 63, 1}, {64, 64, 9}, {65, 90, 10}, {91, 94, 1}, {95, 95, 11}, {96, 96, 1}, {97, 122, 12}, {123, 65535, 1}, },
            {{0, 41, 1}, {43, 63, 1}, {65, 65535, 1}, },
            {{0, 41, -2}, {43, 63, -2}, {64, 64, 13}, {65, 90, 14}, {91, 94, 1}, {95, 95, 15}, {96, 96, 1}, {97, 122, 16}, {123, 65535, 1}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {},
            {{0, 41, 1}, {43, 63, -2}, {64, 64, 17}, {65, 65535, -4}, },
            {{0, 44, -9}, {45, 45, 18}, {46, 64, -9}, {65, 90, 19}, {91, 94, 1}, {95, 95, 20}, {96, 96, 1}, {97, 122, 21}, {123, 65535, 1}, },
            {{45, 45, 22}, {64, 64, 23}, {65, 65, 24}, {66, 67, 25}, {68, 68, 26}, {69, 76, 25}, {77, 77, 27}, {78, 90, 25}, {95, 95, 28}, {97, 97, 29}, {98, 99, 30}, {100, 100, 31}, {101, 108, 30}, {109, 109, 32}, {110, 122, 30}, },
            {{0, 64, -9}, {65, 65535, -2}, },
            {{0, 65535, -12}, },
            {{0, 65535, -12}, },
            {{45, 45, 22}, {65, 122, -11}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{45, 45, 22}, {65, 90, 33}, {95, 95, 34}, {97, 122, 35}, },
            {{0, 45, -10}, {46, 63, 1}, {64, 65535, -10}, },
            {{0, 65535, -20}, },
            {{0, 65535, -20}, },
            {{0, 65535, -20}, },
            {{45, 45, 22}, {46, 46, 36}, {65, 122, -19}, },
            {},
            {{9, 9, 37}, {10, 10, 38}, {13, 13, 39}, {32, 32, 40}, {45, 46, -24}, {65, 84, 25}, {85, 85, 41}, {86, 90, 25}, {95, 95, 28}, {97, 116, 30}, {117, 117, 42}, {118, 122, 30}, },
            {{9, 46, -26}, {65, 90, 25}, {95, 95, 28}, {97, 122, 30}, },
            {{9, 46, -26}, {65, 65, 43}, {66, 68, 25}, {69, 69, 44}, {70, 90, 25}, {95, 95, 28}, {97, 97, 45}, {98, 100, 30}, {101, 101, 46}, {102, 122, 30}, },
            {{9, 46, -26}, {65, 78, 25}, {79, 79, 47}, {80, 90, 25}, {95, 95, 28}, {97, 110, 30}, {111, 111, 48}, {112, 122, 30}, },
            {{9, 122, -27}, },
            {{9, 122, -26}, },
            {{9, 122, -27}, },
            {{9, 122, -28}, },
            {{9, 122, -29}, },
            {{45, 122, -24}, },
            {{45, 122, -24}, },
            {{45, 122, -24}, },
            {{45, 45, 49}, {65, 90, 50}, {95, 95, 51}, {97, 122, 52}, },
            {{9, 32, -26}, },
            {{9, 32, -26}, },
            {{9, 32, -26}, },
            {{9, 32, -26}, },
            {{9, 46, -26}, {65, 83, 25}, {84, 84, 53}, {85, 90, 25}, {95, 95, 28}, {97, 115, 30}, {116, 116, 54}, {117, 122, 30}, },
            {{9, 122, -43}, },
            {{9, 83, -43}, {84, 84, 55}, {85, 115, -43}, {116, 116, 56}, {117, 122, 30}, },
            {{9, 46, -26}, {65, 82, 25}, {83, 83, 57}, {84, 90, 25}, {95, 95, 28}, {97, 114, 30}, {115, 115, 58}, {116, 122, 30}, },
            {{9, 122, -45}, },
            {{9, 122, -46}, },
            {{9, 46, -26}, {65, 67, 25}, {68, 68, 59}, {69, 90, 25}, {95, 95, 28}, {97, 99, 30}, {100, 100, 60}, {101, 122, 30}, },
            {{9, 122, -49}, },
            {{9, 9, 61}, {10, 10, 62}, {13, 13, 63}, {32, 32, 64}, {45, 122, -38}, },
            {{9, 122, -51}, },
            {{9, 122, -51}, },
            {{9, 122, -51}, },
            {{9, 46, -26}, {65, 71, 25}, {72, 72, 65}, {73, 90, 25}, {95, 95, 28}, {97, 103, 30}, {104, 104, 66}, {105, 122, 30}, },
            {{9, 122, -55}, },
            {{9, 46, -26}, {65, 68, 25}, {69, 69, 67}, {70, 95, -28}, {97, 100, 30}, {101, 101, 68}, {102, 122, 30}, },
            {{9, 122, -57}, },
            {{9, 46, -26}, {65, 66, 25}, {67, 67, 69}, {68, 90, 25}, {95, 95, 28}, {97, 98, 30}, {99, 99, 70}, {100, 122, 30}, },
            {{9, 122, -59}, },
            {{9, 68, -57}, {69, 69, 71}, {70, 100, -57}, {101, 101, 72}, {102, 122, 30}, },
            {{9, 122, -61}, },
            {{9, 32, -51}, },
            {{9, 32, -51}, },
            {{9, 32, -51}, },
            {{9, 32, -51}, },
            {{9, 78, -29}, {79, 79, 73}, {80, 110, -29}, {111, 111, 74}, {112, 122, 30}, },
            {{9, 122, -67}, },
            {{9, 9, 75}, {10, 10, 76}, {13, 13, 77}, {32, 32, 78}, {45, 122, -27}, },
            {{9, 122, -69}, },
            {{9, 46, -26}, {65, 81, 25}, {82, 82, 79}, {83, 90, 25}, {95, 95, 28}, {97, 113, 30}, {114, 114, 80}, {115, 122, 30}, },
            {{9, 122, -71}, },
            {{9, 9, 81}, {10, 10, 82}, {13, 13, 83}, {32, 32, 84}, {45, 122, -27}, },
            {{9, 122, -73}, },
            {{9, 81, -71}, {82, 82, 85}, {83, 113, -71}, {114, 114, 86}, {115, 122, 30}, },
            {{9, 122, -75}, },
            {{9, 32, -69}, },
            {{9, 32, -69}, },
            {{9, 32, -69}, },
            {{9, 32, -69}, },
            {{9, 9, 87}, {10, 10, 88}, {13, 13, 89}, {32, 32, 90}, {45, 46, -24}, {65, 72, 25}, {73, 73, 91}, {74, 90, 25}, {95, 95, 28}, {97, 104, 30}, {105, 105, 92}, {106, 122, 30}, },
            {{9, 122, -81}, },
            {{9, 32, -73}, },
            {{9, 32, -73}, },
            {{9, 32, -73}, },
            {{9, 32, -73}, },
            {{9, 9, 93}, {10, 10, 94}, {13, 13, 95}, {32, 32, 96}, {45, 122, -27}, },
            {{9, 122, -87}, },
            {{9, 32, -81}, },
            {{9, 32, -81}, },
            {{9, 32, -81}, },
            {{9, 32, -81}, },
            {{9, 46, -26}, {65, 79, 25}, {80, 80, 97}, {81, 90, 25}, {95, 95, 28}, {97, 111, 30}, {112, 112, 98}, {113, 122, 30}, },
            {{9, 122, -93}, },
            {{9, 32, -87}, },
            {{9, 32, -87}, },
            {{9, 32, -87}, },
            {{9, 32, -87}, },
            {{9, 83, -43}, {84, 84, 99}, {85, 115, -43}, {116, 116, 100}, {117, 122, 30}, },
            {{9, 122, -99}, },
            {{9, 46, -26}, {65, 72, 25}, {73, 73, 101}, {74, 104, -81}, {105, 105, 102}, {106, 122, 30}, },
            {{9, 122, -101}, },
            {{9, 78, -29}, {79, 79, 103}, {80, 110, -29}, {111, 111, 104}, {112, 122, 30}, },
            {{9, 122, -103}, },
            {{9, 46, -26}, {65, 77, 25}, {78, 78, 105}, {79, 90, 25}, {95, 95, 28}, {97, 109, 30}, {110, 110, 106}, {111, 122, 30}, },
            {{9, 122, -105}, },
            {{9, 46, -81}, {65, 122, -27}, },
            {{9, 122, -107}, },
        }
        { // DOC_STAR
            {{0, 41, 1}, {42, 42, 2}, {43, 46, 1}, {47, 47, 3}, {48, 63, 1}, {65, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, -2}, },
            {{42, 42, 2}, },
            {{9, 9, 4}, {10, 10, 5}, {13, 13, 6}, {32, 32, 7}, },
            {{9, 32, -5}, },
            {{9, 32, -5}, },
            {{9, 32, -5}, },
            {{9, 32, -5}, },
        }
        { // DOC_SINGLE
            {{0, 0, 1}, {1, 2, 2}, {3, 3, 3}, {4, 4, 4}, {5, 8, 2}, {9, 9, 5}, {10, 10, 6}, {11, 12, 2}, {13, 13, 7}, {14, 31, 2}, {32, 32, 8}, {33, 44, 2}, {45, 45, 9}, {46, 46, 10}, {47, 63, 2}, {64, 64, 11}, {65, 90, 12}, {91, 94, 2}, {95, 95, 13}, {96, 96, 2}, {97, 122, 14}, {123, 65535, 2}, },
            {{0, 9, 2}, {11, 63, 2}, {65, 65535, 2}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 8, 2}, {9, 9, 5}, {11, 63, -2}, {64, 64, 15}, {65, 65535, -2}, },
            {},
            {{0, 65535, -7}, },
            {{0, 65535, -7}, },
            {{0, 9, 2}, {11, 44, 2}, {45, 63, -2}, {64, 64, 16}, {65, 65535, -2}, },
            {{0, 44, -11}, {45, 45, 17}, {46, 64, -11}, {65, 90, 18}, {91, 94, 2}, {95, 95, 19}, {96, 96, 2}, {97, 122, 20}, {123, 65535, 2}, },
            {{45, 45, 21}, {64, 64, 22}, {65, 65, 23}, {66, 67, 24}, {68, 68, 25}, {69, 76, 24}, {77, 77, 26}, {78, 90, 24}, {95, 95, 27}, {97, 97, 28}, {98, 99, 29}, {100, 100, 30}, {101, 108, 29}, {109, 109, 31}, {110, 122, 29}, },
            {{0, 65535, -11}, },
            {{0, 65535, -11}, },
            {{0, 65535, -11}, },
            {{45, 45, 21}, {65, 122, -13}, },
            {{45, 45, 21}, {65, 90, 32}, {95, 95, 33}, {97, 122, 34}, },
            {{0, 45, -12}, {46, 63, 2}, {64, 65535, -12}, },
            {{0, 65535, -19}, },
            {{0, 65535, -19}, },
            {{0, 65535, -19}, },
            {{45, 45, 21}, {46, 46, 35}, {65, 122, -18}, },
            {},
            {{9, 9, 36}, {13, 13, 37}, {32, 32, 38}, {45, 46, -23}, {65, 84, 24}, {85, 85, 39}, {86, 90, 24}, {95, 95, 27}, {97, 116, 29}, {117, 117, 40}, {118, 122, 29}, },
            {{9, 46, -25}, {65, 90, 24}, {95, 95, 27}, {97, 122, 29}, },
            {{9, 46, -25}, {65, 65, 41}, {66, 68, 24}, {69, 69, 42}, {70, 90, 24}, {95, 95, 27}, {97, 97, 43}, {98, 100, 29}, {101, 101, 44}, {102, 122, 29}, },
            {{9, 46, -25}, {65, 78, 24}, {79, 79, 45}, {80, 90, 24}, {95, 95, 27}, {97, 110, 29}, {111, 111, 46}, {112, 122, 29}, },
            {{9, 122, -26}, },
            {{9, 122, -25}, },
            {{9, 122, -26}, },
            {{9, 122, -27}, },
            {{9, 122, -28}, },
            {{45, 122, -23}, },
            {{45, 122, -23}, },
            {{45, 122, -23}, },
            {{45, 45, 47}, {65, 90, 48}, {95, 95, 49}, {97, 122, 50}, },
            {{9, 32, -25}, },
            {{9, 32, -25}, },
            {{9, 32, -25}, },
            {{9, 46, -25}, {65, 83, 24}, {84, 84, 51}, {85, 90, 24}, {95, 95, 27}, {97, 115, 29}, {116, 116, 52}, {117, 122, 29}, },
            {{9, 122, -41}, },
            {{9, 83, -41}, {84, 84, 53}, {85, 115, -41}, {116, 116, 54}, {117, 122, 29}, },
            {{9, 46, -25}, {65, 82, 24}, {83, 83, 55}, {84, 90, 24}, {95, 95, 27}, {97, 114, 29}, {115, 115, 56}, {116, 122, 29}, },
            {{9, 122, -43}, },
            {{9, 122, -44}, },
            {{9, 46, -25}, {65, 67, 24}, {68, 68, 57}, {69, 90, 24}, {95, 95, 27}, {97, 99, 29}, {100, 100, 58}, {101, 122, 29}, },
            {{9, 122, -47}, },
            {{9, 9, 59}, {13, 13, 60}, {32, 32, 61}, {45, 122, -37}, },
            {{9, 122, -49}, },
            {{9, 122, -49}, },
            {{9, 122, -49}, },
            {{9, 46, -25}, {65, 71, 24}, {72, 72, 62}, {73, 90, 24}, {95, 95, 27}, {97, 103, 29}, {104, 104, 63}, {105, 122, 29}, },
            {{9, 122, -53}, },
            {{9, 46, -25}, {65, 68, 24}, {69, 69, 64}, {70, 95, -27}, {97, 100, 29}, {101, 101, 65}, {102, 122, 29}, },
            {{9, 122, -55}, },
            {{9, 46, -25}, {65, 66, 24}, {67, 67, 66}, {68, 90, 24}, {95, 95, 27}, {97, 98, 29}, {99, 99, 67}, {100, 122, 29}, },
            {{9, 122, -57}, },
            {{9, 68, -55}, {69, 69, 68}, {70, 100, -55}, {101, 101, 69}, {102, 122, 29}, },
            {{9, 122, -59}, },
            {{9, 32, -49}, },
            {{9, 32, -49}, },
            {{9, 32, -49}, },
            {{9, 78, -28}, {79, 79, 70}, {80, 110, -28}, {111, 111, 71}, {112, 122, 29}, },
            {{9, 122, -64}, },
            {{9, 9, 72}, {13, 13, 73}, {32, 32, 74}, {45, 122, -26}, },
            {{9, 122, -66}, },
            {{9, 46, -25}, {65, 81, 24}, {82, 82, 75}, {83, 90, 24}, {95, 95, 27}, {97, 113, 29}, {114, 114, 76}, {115, 122, 29}, },
            {{9, 122, -68}, },
            {{9, 9, 77}, {13, 13, 78}, {32, 32, 79}, {45, 122, -26}, },
            {{9, 122, -70}, },
            {{9, 81, -68}, {82, 82, 80}, {83, 113, -68}, {114, 114, 81}, {115, 122, 29}, },
            {{9, 122, -72}, },
            {{9, 32, -66}, },
            {{9, 32, -66}, },
            {{9, 32, -66}, },
            {{9, 9, 82}, {13, 13, 83}, {32, 32, 84}, {45, 46, -23}, {65, 72, 24}, {73, 73, 85}, {74, 90, 24}, {95, 95, 27}, {97, 104, 29}, {105, 105, 86}, {106, 122, 29}, },
            {{9, 122, -77}, },
            {{9, 32, -70}, },
            {{9, 32, -70}, },
            {{9, 32, -70}, },
            {{9, 9, 87}, {13, 13, 88}, {32, 32, 89}, {45, 122, -26}, },
            {{9, 122, -82}, },
            {{9, 32, -77}, },
            {{9, 32, -77}, },
            {{9, 32, -77}, },
            {{9, 46, -25}, {65, 79, 24}, {80, 80, 90}, {81, 90, 24}, {95, 95, 27}, {97, 111, 29}, {112, 112, 91}, {113, 122, 29}, },
            {{9, 122, -87}, },
            {{9, 32, -82}, },
            {{9, 32, -82}, },
            {{9, 32, -82}, },
            {{9, 83, -41}, {84, 84, 92}, {85, 115, -41}, {116, 116, 93}, {117, 122, 29}, },
            {{9, 122, -92}, },
            {{9, 46, -25}, {65, 72, 24}, {73, 73, 94}, {74, 104, -77}, {105, 105, 95}, {106, 122, 29}, },
            {{9, 122, -94}, },
            {{9, 78, -28}, {79, 79, 96}, {80, 110, -28}, {111, 111, 97}, {112, 122, 29}, },
            {{9, 122, -96}, },
            {{9, 46, -25}, {65, 77, 24}, {78, 78, 98}, {79, 90, 24}, {95, 95, 27}, {97, 109, 29}, {110, 110, 99}, {111, 122, 29}, },
            {{9, 122, -98}, },
            {{9, 46, -77}, {65, 122, -26}, },
            {{9, 122, -100}, },
        }
        { // PL_SINGLE_COMMENT_START
            {{0, 9, 1}, {10, 10, 2}, {11, 36, 1}, {37, 37, 3}, {38, 65535, 1}, },
            {{0, 9, 1}, {11, 36, 1}, {38, 65535, 1}, },
            {{10, 10, 2}, },
            {{37, 37, 3}, },
        }
        { // PL_COMMENT
            {{0, 41, 1}, {42, 42, 2}, {43, 65535, 1}, },
            {{0, 41, 1}, {43, 65535, 1}, },
            {{42, 42, 2}, },
        }
        { // PL_COMMENT_STAR
            {{0, 41, 1}, {42, 42, 2}, {43, 46, 1}, {47, 47, 3}, {48, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{42, 42, 2}, },
            {{47, 47, 3}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // PL
        {-1, 13, 17, 14, 16, 15, },
        // PL_SLASH
        {-1, 20, 19, 18, },
        // PL_STAR
        {-1, 21, 22, 22, 22, 22, 22, },
        // PL_SINGLE_TICKS
        {28, 28, 30, -1, 29, },
        // PL_DOUBLE_TICKS
        {31, 31, 33, -1, 32, },
        // DOC
        {8, 8, 8, 8, 8, 8, 9, 8, 8, -1, 7, 7, 7, -1, 8, 8, 8, -1, 8, 8, 8, 8, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, 6, 6, 6, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 3, 3, 3, -1, -1, 5, 5, 5, 5, -1, -1, 2, 2, 2, 2, -1, -1, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
        // DOC_STAR
        {-1, 11, 10, 12, 12, 12, 12, 12, },
        // DOC_SINGLE
        {-1, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, -1, 37, 37, 37, -1, -1, 37, 37, 37, 37, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, 44, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, 39, 39, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 41, 41, -1, -1, 43, 43, 43, -1, -1, 40, 40, 40, -1, -1, 42, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
        // PL_SINGLE_COMMENT_START
        {-1, 34, 35, 36, },
        // PL_COMMENT
        {23, 23, 24, },
        // PL_COMMENT_STAR
        {-1, 26, 25, 27, },

    };*/

    public static class State
    {
        public final static State PL = new State(0);
        public final static State PL_SLASH = new State(1);
        public final static State PL_STAR = new State(2);
        public final static State PL_SINGLE_TICKS = new State(3);
        public final static State PL_DOUBLE_TICKS = new State(4);
        public final static State DOC = new State(5);
        public final static State DOC_STAR = new State(6);
        public final static State DOC_SINGLE = new State(7);
        public final static State PL_SINGLE_COMMENT_START = new State(8);
        public final static State PL_COMMENT = new State(9);
        public final static State PL_COMMENT_STAR = new State(10);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
